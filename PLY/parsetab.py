
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDECLOSEK CLOSEP COLON COMA COUT CTEFLOAT CTEINT CTESTRING DIVIDE DO ELSE END ENDL EQUAL FLOAT GREATER ID IF INT ISNOT LESS MINUS MULTIPLY OPENK OPENP PLUS PROGRAM VAR WHILEprogram : PROGRAM ID ENDL programPrimaprogramPrima : body END \n                     | vars body ENDvars : VAR ID idPrimaidPrima : COMA ID idPrima\n               | COLON typeidPrima2 : ID idPrimavarsPrima : \n               | idPrima2type : INT ENDL varsPrima\n            | FLOAT ENDL varsPrimabody : OPENK bodyPrima CLOSEKbodyPrima : \n               | statement bodyPrimastatement : assign\n               | condition\n               | cycle\n               | printprint : COUT OPENP printPrima printPrima : expresion expresionPrima\n               | CTESTRING expresionPrimaexpresionPrima : COMA printPrima \n               | CLOSEP ENDLassign : ID EQUAL expresion ENDLcycle : DO body WHILE OPENP expresion CLOSEP ENDLexpresion : exp  expresionPrima2expresionPrima2 : \n               | GREATER exp\n               | LESS exp\n               | ISNOT expcondition : IF OPENP expresion CLOSEP body conditionPrimaconditionPrima : ELSE body ENDL\n               | ENDL factor : factorPrimafactorPrima : OPENP expresion CLOSEP\n               | factorPrima2\n               | PLUS factorPrima2\n               | MINUS factorPrima2factorPrima2 : ID\n               | ctecte : CTEINT\n           | CTEFLOATexp : expPrimaexpPrima : termino PLUS exp\n                | termino MINUS exp\n                | terminotermino : terminoPrimaterminoPrima : factor MULTIPLY termino\n           | factor DIVIDE termino\n           | factor '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,10,23,],[0,-1,-2,-3,]),'ID':([2,8,9,13,14,15,16,17,26,27,29,31,38,39,43,50,57,59,60,61,62,63,66,67,70,71,72,74,76,77,88,89,94,96,100,101,],[3,18,22,18,-15,-16,-17,-18,33,33,33,53,33,33,33,-19,-24,33,33,33,33,33,33,33,33,-20,33,-21,92,92,-22,-23,-31,-33,-25,-32,]),'ENDL':([3,24,33,34,35,36,37,40,41,42,44,45,46,47,55,56,58,64,65,73,78,79,80,81,82,83,84,85,86,97,99,],[4,-12,-39,57,-27,-43,-46,-47,-50,-34,-36,-40,-41,-42,76,77,-26,-37,-38,89,-28,-29,-30,-44,-45,-48,-49,-35,96,100,101,]),'OPENK':([4,7,20,30,54,69,75,76,77,90,91,93,95,98,],[8,8,8,-4,-6,8,-5,-8,-8,-10,-9,-11,8,-7,]),'VAR':([4,],[9,]),'END':([6,11,24,],[10,23,-12,]),'CLOSEK':([8,12,13,14,15,16,17,25,50,57,71,74,88,89,94,96,100,101,],[-13,24,-13,-15,-16,-17,-18,-14,-19,-24,-20,-21,-22,-23,-31,-33,-25,-32,]),'IF':([8,13,14,15,16,17,50,57,71,74,88,89,94,96,100,101,],[19,19,-15,-16,-17,-18,-19,-24,-20,-21,-22,-23,-31,-33,-25,-32,]),'DO':([8,13,14,15,16,17,50,57,71,74,88,89,94,96,100,101,],[20,20,-15,-16,-17,-18,-19,-24,-20,-21,-22,-23,-31,-33,-25,-32,]),'COUT':([8,13,14,15,16,17,50,57,71,74,88,89,94,96,100,101,],[21,21,-15,-16,-17,-18,-19,-24,-20,-21,-22,-23,-31,-33,-25,-32,]),'EQUAL':([18,],[26,]),'OPENP':([19,21,26,27,29,43,49,59,60,61,62,63,66,67,70,72,],[27,29,43,43,43,43,70,43,43,43,43,43,43,43,43,43,]),'COMA':([22,33,35,36,37,40,41,42,44,45,46,47,51,52,53,58,64,65,78,79,80,81,82,83,84,85,92,],[31,-39,-27,-43,-46,-47,-50,-34,-36,-40,-41,-42,72,72,31,-26,-37,-38,-28,-29,-30,-44,-45,-48,-49,-35,31,]),'COLON':([22,53,92,],[32,32,32,]),'WHILE':([24,28,],[-12,49,]),'ELSE':([24,86,],[-12,95,]),'PLUS':([26,27,29,33,37,40,41,42,43,44,45,46,47,59,60,61,62,63,64,65,66,67,70,72,83,84,85,],[38,38,38,-39,62,-47,-50,-34,38,-36,-40,-41,-42,38,38,38,38,38,-37,-38,38,38,38,38,-48,-49,-35,]),'MINUS':([26,27,29,33,37,40,41,42,43,44,45,46,47,59,60,61,62,63,64,65,66,67,70,72,83,84,85,],[39,39,39,-39,63,-47,-50,-34,39,-36,-40,-41,-42,39,39,39,39,39,-37,-38,39,39,39,39,-48,-49,-35,]),'CTEINT':([26,27,29,38,39,43,59,60,61,62,63,66,67,70,72,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'CTEFLOAT':([26,27,29,38,39,43,59,60,61,62,63,66,67,70,72,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'CTESTRING':([29,72,],[52,52,]),'INT':([32,],[55,]),'FLOAT':([32,],[56,]),'MULTIPLY':([33,41,42,44,45,46,47,64,65,85,],[-39,66,-34,-36,-40,-41,-42,-37,-38,-35,]),'DIVIDE':([33,41,42,44,45,46,47,64,65,85,],[-39,67,-34,-36,-40,-41,-42,-37,-38,-35,]),'GREATER':([33,35,36,37,40,41,42,44,45,46,47,64,65,81,82,83,84,85,],[-39,59,-43,-46,-47,-50,-34,-36,-40,-41,-42,-37,-38,-44,-45,-48,-49,-35,]),'LESS':([33,35,36,37,40,41,42,44,45,46,47,64,65,81,82,83,84,85,],[-39,60,-43,-46,-47,-50,-34,-36,-40,-41,-42,-37,-38,-44,-45,-48,-49,-35,]),'ISNOT':([33,35,36,37,40,41,42,44,45,46,47,64,65,81,82,83,84,85,],[-39,61,-43,-46,-47,-50,-34,-36,-40,-41,-42,-37,-38,-44,-45,-48,-49,-35,]),'CLOSEP':([33,35,36,37,40,41,42,44,45,46,47,48,51,52,58,64,65,68,78,79,80,81,82,83,84,85,87,],[-39,-27,-43,-46,-47,-50,-34,-36,-40,-41,-42,69,73,73,-26,-37,-38,85,-28,-29,-30,-44,-45,-48,-49,-35,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programPrima':([4,],[5,]),'body':([4,7,20,69,95,],[6,11,28,86,99,]),'vars':([4,],[7,]),'bodyPrima':([8,13,],[12,25,]),'statement':([8,13,],[13,13,]),'assign':([8,13,],[14,14,]),'condition':([8,13,],[15,15,]),'cycle':([8,13,],[16,16,]),'print':([8,13,],[17,17,]),'idPrima':([22,53,92,],[30,75,98,]),'expresion':([26,27,29,43,70,72,],[34,48,51,68,87,51,]),'exp':([26,27,29,43,59,60,61,62,63,70,72,],[35,35,35,35,78,79,80,81,82,35,35,]),'expPrima':([26,27,29,43,59,60,61,62,63,70,72,],[36,36,36,36,36,36,36,36,36,36,36,]),'termino':([26,27,29,43,59,60,61,62,63,66,67,70,72,],[37,37,37,37,37,37,37,37,37,83,84,37,37,]),'terminoPrima':([26,27,29,43,59,60,61,62,63,66,67,70,72,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor':([26,27,29,43,59,60,61,62,63,66,67,70,72,],[41,41,41,41,41,41,41,41,41,41,41,41,41,]),'factorPrima':([26,27,29,43,59,60,61,62,63,66,67,70,72,],[42,42,42,42,42,42,42,42,42,42,42,42,42,]),'factorPrima2':([26,27,29,38,39,43,59,60,61,62,63,66,67,70,72,],[44,44,44,64,65,44,44,44,44,44,44,44,44,44,44,]),'cte':([26,27,29,38,39,43,59,60,61,62,63,66,67,70,72,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'printPrima':([29,72,],[50,88,]),'type':([32,],[54,]),'expresionPrima2':([35,],[58,]),'expresionPrima':([51,52,],[71,74,]),'varsPrima':([76,77,],[90,93,]),'idPrima2':([76,77,],[91,91,]),'conditionPrima':([86,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID ENDL programPrima','program',4,'p_program','lex.py',137),
  ('programPrima -> body END','programPrima',2,'p_programPrima','lex.py',144),
  ('programPrima -> vars body END','programPrima',3,'p_programPrima','lex.py',145),
  ('vars -> VAR ID idPrima','vars',3,'p_vars','lex.py',148),
  ('idPrima -> COMA ID idPrima','idPrima',3,'p_idPrima','lex.py',152),
  ('idPrima -> COLON type','idPrima',2,'p_idPrima','lex.py',153),
  ('idPrima2 -> ID idPrima','idPrima2',2,'p_idPrima2','lex.py',158),
  ('varsPrima -> <empty>','varsPrima',0,'p_varsPrima','lex.py',163),
  ('varsPrima -> idPrima2','varsPrima',1,'p_varsPrima','lex.py',164),
  ('type -> INT ENDL varsPrima','type',3,'p_type','lex.py',167),
  ('type -> FLOAT ENDL varsPrima','type',3,'p_type','lex.py',168),
  ('body -> OPENK bodyPrima CLOSEK','body',3,'p_body','lex.py',174),
  ('bodyPrima -> <empty>','bodyPrima',0,'p_bodyPrima','lex.py',179),
  ('bodyPrima -> statement bodyPrima','bodyPrima',2,'p_bodyPrima','lex.py',180),
  ('statement -> assign','statement',1,'p_statement','lex.py',183),
  ('statement -> condition','statement',1,'p_statement','lex.py',184),
  ('statement -> cycle','statement',1,'p_statement','lex.py',185),
  ('statement -> print','statement',1,'p_statement','lex.py',186),
  ('print -> COUT OPENP printPrima','print',3,'p_print','lex.py',189),
  ('printPrima -> expresion expresionPrima','printPrima',2,'p_printPrima','lex.py',192),
  ('printPrima -> CTESTRING expresionPrima','printPrima',2,'p_printPrima','lex.py',193),
  ('expresionPrima -> COMA printPrima','expresionPrima',2,'p_expresionPrima','lex.py',196),
  ('expresionPrima -> CLOSEP ENDL','expresionPrima',2,'p_expresionPrima','lex.py',197),
  ('assign -> ID EQUAL expresion ENDL','assign',4,'p_assign','lex.py',200),
  ('cycle -> DO body WHILE OPENP expresion CLOSEP ENDL','cycle',7,'p_cycle','lex.py',210),
  ('expresion -> exp expresionPrima2','expresion',2,'p_expresion','lex.py',219),
  ('expresionPrima2 -> <empty>','expresionPrima2',0,'p_expresionPrima2','lex.py',222),
  ('expresionPrima2 -> GREATER exp','expresionPrima2',2,'p_expresionPrima2','lex.py',223),
  ('expresionPrima2 -> LESS exp','expresionPrima2',2,'p_expresionPrima2','lex.py',224),
  ('expresionPrima2 -> ISNOT exp','expresionPrima2',2,'p_expresionPrima2','lex.py',225),
  ('condition -> IF OPENP expresion CLOSEP body conditionPrima','condition',6,'p_condition','lex.py',233),
  ('conditionPrima -> ELSE body ENDL','conditionPrima',3,'p_conditionPrima','lex.py',238),
  ('conditionPrima -> ENDL','conditionPrima',1,'p_conditionPrima','lex.py',239),
  ('factor -> factorPrima','factor',1,'p_factor','lex.py',242),
  ('factorPrima -> OPENP expresion CLOSEP','factorPrima',3,'p_factorPrima','lex.py',245),
  ('factorPrima -> factorPrima2','factorPrima',1,'p_factorPrima','lex.py',246),
  ('factorPrima -> PLUS factorPrima2','factorPrima',2,'p_factorPrima','lex.py',247),
  ('factorPrima -> MINUS factorPrima2','factorPrima',2,'p_factorPrima','lex.py',248),
  ('factorPrima2 -> ID','factorPrima2',1,'p_factorPrima2','lex.py',257),
  ('factorPrima2 -> cte','factorPrima2',1,'p_factorPrima2','lex.py',258),
  ('cte -> CTEINT','cte',1,'p_cte','lex.py',265),
  ('cte -> CTEFLOAT','cte',1,'p_cte','lex.py',266),
  ('exp -> expPrima','exp',1,'p_exp','lex.py',273),
  ('expPrima -> termino PLUS exp','expPrima',3,'p_expPrima','lex.py',276),
  ('expPrima -> termino MINUS exp','expPrima',3,'p_expPrima','lex.py',277),
  ('expPrima -> termino','expPrima',1,'p_expPrima','lex.py',278),
  ('termino -> terminoPrima','termino',1,'p_termino','lex.py',286),
  ('terminoPrima -> factor MULTIPLY termino','terminoPrima',3,'p_terminoPrima','lex.py',289),
  ('terminoPrima -> factor DIVIDE termino','terminoPrima',3,'p_terminoPrima','lex.py',290),
  ('terminoPrima -> factor','terminoPrima',1,'p_terminoPrima','lex.py',291),
]
